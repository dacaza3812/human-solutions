// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Profile {
  id                 String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email              String    @unique
  full_name          String?
  avatar_url         String?
  billing_address    Json?     @db.Jsonb
  payment_method     Json?     @db.Jsonb
  stripe_customer_id String?   @unique
  current_plan_id    String?   @db.Uuid
  subscription_status String?
  trial_ends_at      DateTime? @db.Timestamptz(6)
  created_at         DateTime  @default(now()) @db.Timestamptz(6)
  updated_at         DateTime  @default(now()) @updatedAt @db.Timestamptz(6)

  // Relations
  currentPlan Plan? @relation(fields: [current_plan_id], references: [id], name: "CurrentPlan")
  payments    Payment[]
}

model Plan {
  id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name          String    @unique
  description   String?
  price         Decimal
  currency      String
  features      String[]  @default([]) @db.Text
  stripe_price_id String? @unique
  created_at    DateTime  @default(now()) @db.Timestamptz(6)
  updated_at    DateTime  @default(now()) @updatedAt @db.Timestamptz(6)

  // Relations
  profiles    Profile[] @relation("CurrentPlan")
  payments    Payment[]
}

model Payment {
  id                       String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id                  String    @db.Uuid
  plan_id                  String    @db.Uuid
  amount                   Decimal
  currency                 String
  status                   String
  stripe_checkout_session_id String? @unique
  stripe_payment_intent_id String? @unique
  stripe_invoice_id        String? @unique
  created_at               DateTime  @default(now()) @db.Timestamptz(6)
  updated_at               DateTime  @default(now()) @updatedAt @db.Timestamptz(6)

  // Relations
  user Profile @relation(fields: [user_id], references: [id])
  plan Plan    @relation(fields: [plan_id], references: [id])
}
